{"remainingRequest":"/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/components/molecules/ImageUpload.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/src/src/components/molecules/ImageUpload.vue","mtime":1581667190000},{"path":"/src/node_modules/css-loader/dist/cjs.js","mtime":1581297304000},{"path":"/src/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1581297308000},{"path":"/src/node_modules/postcss-loader/src/index.js","mtime":1581297306000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1581297308000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYy11cGxvYWQtYnRuIHsKICB3aWR0aDogMTgwcHg7CiAgaGVpZ2h0OiAxODBweDsKICBib3JkZXI6IDFweCBkYXNoZWQgI2RlZGVkZTsKICBtYXJnaW46IDE1cHggMTBweCAxNXB4OwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYmFja2dyb3VuZDogI2ZmZjsKfQoKLmMtdXBsb2FkLWJ0bi5hY3RpdmUgewogIGJvcmRlcjogc29saWQgMXB4ICNlMWUxZTE7Cn0KCi5jLXVwbG9hZC1jYW1lcmEgewogIGZvbnQtc2l6ZTogNjBweDsKICBjb2xvcjogI2RlZGVkZTsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnVwbG9hZF93YXJwIHsKICBoZWlnaHQ6IDIwdmg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgouYy11cGxvYWQtaW1nIHsKICBtYXgtd2lkdGg6IDEwMCU7CiAgZmxvYXQ6IGxlZnQ7CiAgbGluZS1oZWlnaHQ6IDEwMHB4OwogIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgaGVpZ2h0OiAxMDAlOwp9CgouYy1jbG9zZV9idXR0b246OmJlZm9yZSB7CiAgY29udGVudDogIlwwMEQ3IjsKfQoKLmMtY2xvc2VfYnV0dG9uIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAzMCU7CiAgbGVmdDogMDsKICBib3R0b206IDA7CiAgZm9udC1zaXplOiAzNXB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC42KTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgovKiBzcCDjg6zjgrnjg53jg7Pjgrnlr77lv5wgKi8KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkgewogIC5jLXVwbG9hZC1idG4gewogICAgd2lkdGg6IDI1dnc7CiAgICBoZWlnaHQ6IDI1dnc7CiAgfQoKICAuYy11cGxvYWQtY2FtZXJhIHsKICAgIGZvbnQtc2l6ZTogNDBweDsKICB9Cn0K"},{"version":3,"sources":["ImageUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ImageUpload.vue","sourceRoot":"src/components/molecules","sourcesContent":["<template>\n  <div class=\"c-upload-btn\" @click=\"fileClick\">\n    <span\n      v-show=\"!previewImage(image)\"\n      class=\"iconfont icon-camera c-upload-camera\"\n    ></span>\n    <div v-if=\"previewImage(image)\">\n      <div class=\"c-upload-btn active\">\n        <img :src=\"image.thumnail\" class=\"c-upload-img\" />\n      </div>\n      <a class=\"c-close_button\" @click=\"deleteImage\"></a>\n    </div>\n    <input\n      :id=\"'upload_' + index\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"onFileChange($event)\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from \"vuex\";\nimport lambda from \"../../api/lambda\";\nimport axios from \"axios\";\nexport default {\n  name: \"ImageUpload\",\n  props: [\"index\", \"image\", \"itemIndex\"],\n  data() {\n    return {\n      imageKey: null\n    };\n  },\n  computed: {\n    ...mapGetters({\n      imageList: \"itemInformation/getImageList\",\n      itemList: \"itemInformation/getItemList\"\n    })\n  },\n  methods: {\n    ...mapActions({\n      saveStoreImageList: \"itemInformation/saveImageList\"\n    }),\n    fileClick: function() {\n      $(\"#upload_\" + this.index).click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      this.createImage(files[0]);\n    },\n    createImage(file) {\n      var reader = new FileReader();\n      var vm = this;\n      reader.onload = function(e) {\n        vm.image.thumnail = e.target.result;\n        vm.image.uploadFile = file;\n        vm.image.name = file.name;\n      };\n      vm.previewImage(vm.image);\n      reader.readAsDataURL(file);\n      vm.submitImage(file);\n      vm.saveImageStore(vm.image);\n    },\n    saveImageStore: function(image) {\n      /* 各商品の画像オブジェクトに保存 */\n      let obj = this.imageList[this.itemIndex];\n\n      obj.splice(this.index, 1, image);\n      this.imageList.splice(this.itemIndex, 1, obj);\n      this.saveStoreImageList(this.imageList);\n    },\n    previewImage: function(image) {\n      return !(\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    deleteImage: function() {\n      this.image = {\n        thumnail: \"\",\n        uploadFile: {},\n        name: \"\"\n      };\n\n      event.stopPropagation();\n      let obj = this.imageList[this.itemIndex];\n      obj.splice(this.index, 1, this.image);\n      this.image = obj;\n      /* 画像プレビュー用 */\n      this.saveStoreImageList(this.imageList.splice(this.itemIndex, 1, obj));\n      /* 画像送信用 */\n      this.$emit(\"delImgKey\", this.index, this.imageKey);\n    },\n    async getPresignedUrl(file) {\n      return await lambda\n        .getSignedURL(file)\n        .then(res => {\n          return res.data.url;\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    async uploadS3(preSignedUrl, up_file) {\n      try {\n        /* headersでアップロードした画像のContent Typeを設定する */\n        const headers = {\n          \"content-type\": up_file.type\n        };\n        let response = await axios.put(preSignedUrl, up_file, {\n          headers: headers\n        });\n        if (preSignedUrl && preSignedUrl.indexOf(\"?\") != -1) {\n          this.imageKey = preSignedUrl.split(\"?\")[0];\n        }\n        return this.imageKey;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async submitImage(upload_file) {\n      let preSignedUrl = await this.getPresignedUrl(upload_file);\n\n      this.imageKey = await this.uploadS3(preSignedUrl, upload_file);\n      this.$emit(\"saveImgKey\", this.index, this.imageKey);\n    }\n  }\n};\n</script>\n<style>\n.c-upload-btn {\n  width: 180px;\n  height: 180px;\n  border: 1px dashed #dedede;\n  margin: 15px 10px 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: #fff;\n}\n\n.c-upload-btn.active {\n  border: solid 1px #e1e1e1;\n}\n\n.c-upload-camera {\n  font-size: 60px;\n  color: #dedede;\n  font-weight: bold;\n}\n\n.upload_warp {\n  height: 20vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.c-upload-img {\n  max-width: 100%;\n  float: left;\n  line-height: 100px;\n  display: table-cell;\n  text-align: center;\n  background-color: #fff;\n  height: 100%;\n}\n\n.c-close_button::before {\n  content: \"\\00D7\";\n}\n\n.c-close_button {\n  position: absolute;\n  width: 100%;\n  height: 30%;\n  left: 0;\n  bottom: 0;\n  font-size: 35px;\n  font-weight: bold;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* sp レスポンス対応 */\n@media only screen and (max-width: 767px) {\n  .c-upload-btn {\n    width: 25vw;\n    height: 25vw;\n  }\n\n  .c-upload-camera {\n    font-size: 40px;\n  }\n}\n</style>\n"]}]}