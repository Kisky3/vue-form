{"remainingRequest":"/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kou/Desktop/vue-form/src/components/molecules/UserCities.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kou/Desktop/vue-form/src/components/molecules/UserCities.vue","mtime":1580692314813},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserCities.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserCities.vue","sourceRoot":"src/components/molecules","sourcesContent":["<template>\n  <div class=\"input-container\">\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>県名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select\n            v-model=\"user.prefectures\"\n            @change=\"(cities = null), (towns = null), submitCatLvl0(cat_lvl0)\"\n          >\n            <option disabled=\"disabled\" :value=\"null\">\n              都道府県を選択してください</option\n            >\n            <option\n              v-for=\"(item, index) in prefecturesList\"\n              :value=\"index\"\n              :key=\"index\"\n              >{{ user.prefectures }}</option\n            >\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>市区町村</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-cities\" name=\"geoapi-cities\">\n            <option value=\"市区町村名を選択してください\"\n              >選択してください</option\n            >\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>町域名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-towns\" name=\"geoapi-towns\">\n            <option value=\"町域を選択してください\">選択してください</option>\n          </select>\n        </div>\n      </div>\n\n      <button style=\"width:100px;background:red\" @click=\"logout()\">\n        ログアウト\n      </button>\n    </div>\n  </div>\n</template>\n<style>\n.select-wrap {\n  margin: 0 0 10px 0;\n  position: relative;\n}\n.icon-pulldown {\n  position: absolute;\n  right: 5px;\n  top: 50%;\n  z-index: 2;\n  color: #999;\n  -webkit-transform: translate(0, -50%);\n  transform: translate(0, -50%);\n}\n/* カテゴリーアニメーション */\n.expand-enter-active,\n.expand-leave-active {\n  transition: opacity 0.5s;\n}\n.expand-enter,\n.expand-leave-to {\n  opacity: 0;\n}\n</style>\n\n<script>\n// import { ValidationProvider, extend } from \"vee-validate\";\nimport RequireTag from \"./../atoms/RequireTag\";\nimport api from \"@/api/info\";\n\nvar geoapi_url = \"http://geoapi.heartrails.com/api/json?jsonp=?\";\nvar geoapi_area_selected;\nvar geoapi_prefecture_selected;\nvar geoapi_city_selected;\nvar geoapi_town_selected;\nvar geoapi_towns = null;\n\nexport default {\n  name: \"UserCities\",\n  props: [\"itemData\"],\n  components: {\n    // ValidationProvider\n    RequireTag\n  },\n  data() {\n    return {\n      user: {\n        prefectures: null,\n        cities: null,\n        town: null\n      }\n    };\n  },\n  computed: {\n    prefecturesList: function() {\n      return this.list;\n    }\n  },\n  methods: {\n    logout() {\n      const qs = require(\"qs\");\n      return new Promise((resolve, reject) => {\n        api\n          .getPrefecturesList()\n          .then(data => {\n            resolve(data, data);\n            console.log(data)\n          })\n          .catch(error => reject(error));\n      });\n    },\n    list: function() {\n      getPrefectures()\n        .then(data => {\n          resolve(data, data);\n          alert(\"hey\");\n          return false;\n        })\n        .catch(error => reject(error));\n      /*$.getJSON(\n        geoapi_url,\n        { method: \"getPrefectures\" },\n        this.getPrefecturesList\n      );*/\n    },\n    getPrefecturesList: function(json) {\n      var prefecturesList = json.response.prefecture;\n      return prefecturesList;\n    },\n    /* ffffffffffffffffffffffffffffffffffffffffffffffffffffff  */\n    geoApiInitialize: function() {\n      if ($(\"#geoapi-prefectures\").length > 0) {\n        this.geoApiInitializePrefectures();\n      }\n      this.geoApiInitializeCities();\n      this.geoApiInitializeTowns();\n      $(\"#geoapi-address\").attr(\"disabled\", true);\n      $(\"#geoapi-areas\").change(this.geoApiChangeArea);\n      $(\"#geoapi-prefectures\").change(this.geoApiChangePrefecture);\n      $(\"#geoapi-cities\").change(this.geoApiChangeCity);\n      $(\"#geoapi-towns\").change(this.geoApiChangeTown);\n      $(\"#geoapi-postal-4\").keyup(this.geoApiSearchByPostal);\n    },\n\n    geoApiInitializeCities: function() {\n      $(\"#geoapi-cities\").html(\n        '<option value=\"市区町村を選択してください\">市区町村を選択してください&nbsp;&nbsp;</option>'\n      );\n    },\n\n    geoApiInitializeTowns: function() {\n      $(\"#geoapi-towns\").html(\n        '<option value=\"町域名を選択してください\">町域名を選択してください&nbsp;&nbsp;</option>'\n      );\n    },\n\n    geoApiChangeArea: function() {\n      geoapi_area_selected = $(\"#geoapi-areas option:selected\");\n      this.geoApiInitializeCities();\n      this.geoApiInitializeTowns();\n      if (geoapi_area_selected.val() == \"繧ｨ繝ｪ繧｢繧帝∈謚槭＠縺ｦ縺上□縺輔＞\") {\n        return;\n      }\n      $.getJSON(\n        geoapi_url,\n        { method: \"getCities\", area: geoapi_area_selected.text() },\n        this.setCities\n      );\n    },\n\n    geoApiChangePrefecture: function() {\n      geoapi_prefecture_selected = $(\"#geoapi-prefectures option:selected\");\n      this.geoApiInitializeCities();\n      this.geoApiInitializeTowns();\n      if (geoapi_prefecture_selected.val() == \"県名を選択してください\") {\n        return;\n      }\n      $.getJSON(\n        geoapi_url,\n        { method: \"getCities\", prefecture: geoapi_prefecture_selected.text() },\n        this.setCities\n      );\n    },\n\n    geoApiSetAreas: function(json) {\n      var areas = json.response.area;\n      for (var index = 0; index < areas.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(areas[index]);\n        option.val(areas[index]);\n        $(\"#geoapi-areas\").append(option);\n      }\n    },\n\n    setCities: function(json) {\n      var cities = json.response[\"location\"];\n      for (var index = 0; index < cities.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(cities[index].city);\n        option.val(cities[index].city);\n        $(\"#geoapi-cities\").append(option);\n      }\n    },\n\n    geoApiChangeCity: function() {\n      geoapi_city_selected = $(\"#geoapi-cities option:selected\");\n      this.geoApiInitializeTowns();\n      if (geoapi_city_selected.val() == \"都市\") {\n        return;\n      }\n      $.getJSON(\n        geoapi_url,\n        { method: \"getTowns\", city: geoapi_city_selected.text() },\n        this.geoApiSetTowns\n      );\n    },\n\n    geoApiSetTowns: function(json) {\n      geoapi_towns = json.response[\"location\"];\n      var cities = json.response[\"location\"];\n      for (var index = 0; index < cities.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(cities[index].town);\n        option.val(cities[index].town);\n        $(\"#geoapi-towns\").append(option);\n      }\n    },\n    geoApiChangeTown: function() {\n      geoapi_town_selected = $(\"#geoapi-towns option:selected\");\n      if (geoapi_town_selected.val() == \"町域名を選択してください\") {\n        return;\n      }\n      var town = this.geoApiGetTownObject(geoapi_town_selected.text());\n    },\n\n    geoApiGetTownObject: function(name) {\n      var town = null;\n      for (var index = 0; index < geoapi_towns.length; index++) {\n        if (name == geoapi_towns[index].town) {\n          town = geoapi_towns[index];\n          break;\n        }\n      }\n      return town;\n    },\n    geoApiSearchByPostal: function(e) {\n      var key_code = e.keyCode || event.keyCode;\n      if (\n        key_code != 9 &&\n        key_code != 37 &&\n        key_code != 38 &&\n        key_code != 39 &&\n        key_code != 40 &&\n        $(\"#geoapi-postal-4\").val().length == 4\n      ) {\n        var geoapi_postal_3 = $(\"input#geoapi-postal-3\");\n        var geoapi_postal_4 = $(\"input#geoapi-postal-4\");\n        if (!geoapi_postal_3.val() || !geoapi_postal_4.val()) {\n          return false;\n        }\n        $.getJSON(\n          geoapi_url,\n          {\n            method: \"searchByPostal\",\n            postal: geoapi_postal_3.val() + geoapi_postal_4.val()\n          },\n          geoapiSearchByPostalAfter\n        );\n      }\n    },\n    geoapiSearchByPostalAfter: function(json) {\n      if (json.response.error) {\n        alert(json.response.error);\n        return false;\n      }\n      var addresses = json.response[\"location\"];\n      this.geiApiGetAddress(addresses);\n    }\n  }\n};\n</script>\n"]}]}