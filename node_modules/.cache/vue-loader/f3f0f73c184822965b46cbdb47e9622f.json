{"remainingRequest":"/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/components/molecules/UserAddress.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/src/src/components/molecules/UserAddress.vue","mtime":1581642133000},{"path":"/src/node_modules/css-loader/dist/cjs.js","mtime":1581297304000},{"path":"/src/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1581297308000},{"path":"/src/node_modules/postcss-loader/src/index.js","mtime":1581297306000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1581297308000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiDjgqvjg4bjgrTjg6rjg7zjgqLjg4vjg6Hjg7zjgrfjg6fjg7MgKi8KLmV4cGFuZC1lbnRlci1hY3RpdmUsCi5leHBhbmQtbGVhdmUtYWN0aXZlIHsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDFzOwp9Ci5leHBhbmQtZW50ZXIsCi5leHBhbmQtbGVhdmUtdG8gewogIG9wYWNpdHk6IDA7Cn0K"},{"version":3,"sources":["UserAddress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserAddress.vue","sourceRoot":"src/components/molecules","sourcesContent":["<template>\n  <div>\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>都道府県</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <validation-provider rules=\"required\" name=\"都道府県\">\n            <div slot-scope=\"ProviderProps\">\n              <select\n                v-model=\"prefecture\"\n                @change=\"\n                  changeCityList(prefecture),\n                    submitPrefecture()\n                \"\n                :class=\"ProviderProps.errors[0] ? 'error-active' : ''\"\n              >\n                <option disabled=\"disabled\" :value=\"null\">\n                  都道府県を選択してください</option\n                >\n                <option\n                  v-for=\"(pref, index) in prefectureList\"\n                  :value=\"pref.prefCode\"\n                  :key=\"index\"\n                  >{{ pref.prefName }}</option\n                >\n              </select>\n              <div class=\"error-message\">\n                <span\n                  v-show=\"ProviderProps.errors[0]\"\n                  class=\"iconfont icon-warn\"\n                ></span>\n                {{ ProviderProps.errors[0] }}\n              </div>\n            </div>\n          </validation-provider>\n        </div>\n      </div>\n    </div>\n\n    <transition name=\"expand\">\n        <div class=\"c-page-row\" v-show=\"prefecture !== null\">\n          <div class=\"c-page-subtitle\">\n            <p>市区町村</p>\n            <require-tag />\n          </div>\n          <div class=\"input-container\">\n            <div class=\"select-wrap\">\n              <i class=\"iconfont icon-pulldown\"></i>\n              <validation-provider rules=\"required\" name=\"市区町村\">\n                <div slot-scope=\"ProviderProps\">\n                  <select\n                    v-model=\"city\"\n                    @change=\"submitCity()\"\n                    :class=\"ProviderProps.errors[0] ? 'error-active' : ''\"\n                  >\n                    <option disabled=\"disabled\" :value=\"null\">\n                      市区町村を選択してください</option\n                    >\n                    <option\n                      v-for=\"(city, index) in cityList\"\n                      :value=\"city.id\"\n                      :key=\"index\"\n                      >{{ city.name }}</option\n                    >\n                  </select>\n                  <div class=\"error-message\">\n                    <span\n                      v-show=\"ProviderProps.errors[0]\"\n                      class=\"iconfont icon-warn\"\n                    ></span>\n                    {{ ProviderProps.errors[0] }}\n                  </div>\n                </div>\n              </validation-provider>\n            </div>\n          </div>\n      </div>\n    </transition>\n\n    <!-- 商用の適切のAPIはまだ決めてないため、実装は一旦止まる\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>町域名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-towns\" name=\"geoapi-towns\">\n            <option value=\"町域を選択してください\">選択してください</option>\n          </select>\n        </div>\n      </div>\n    </div>-->\n  </div>\n</template>\n<style>\n/* カテゴリーアニメーション */\n.expand-enter-active,\n.expand-leave-active {\n  transition: opacity 1s;\n}\n.expand-enter,\n.expand-leave-to {\n  opacity: 0;\n}\n</style>\n\n<script>\nimport { ValidationProvider, extend } from \"vee-validate\";\nimport RequireTag from \"./../atoms/RequireTag\";\nimport api from \"@/api/info\";\nimport settings from \"./../../settings/setting\";\n\nexport default {\n  name: \"UserCities\",\n  components: {\n    ValidationProvider,\n    RequireTag\n  },\n  data() {\n    return {\n    prefecture: null,\n    city: null,\n    town: null,\n    cityList: null\n    };\n  },\n  computed: {\n    prefectureList: function() {\n      return settings.prefectureList;\n    }\n  },\n  methods: {\n    changeCityList: function(prefCode) {\n      return new Promise((resolve, reject) => {\n        api\n          .getCityList(prefCode)\n          .then(data => {\n            resolve(data, data);\n            this.cityList = data.data;\n          })\n          .catch(error => reject(error));\n      });\n    },\n    changeTownList: function(cityCode) {\n      return new Promise((resolve, reject) => {\n        api\n          .getTownList(cityCode)\n          .then(data => {\n            resolve(data, data);\n            this.cityList = data.data;\n          })\n          .catch(error => reject(error));\n      });\n    },\n    submitPrefecture() {\n      this.$emit(\"submitPrefecture\", this.prefecture );\n    },\n    submitCity() {\n      this.$emit(\"submitCity\", this.city);\n    },\n    submitTown() {\n      this.$emit(\"submitTown\", this.town );\n    }\n  }\n};\n</script>\n"]}]}