{"remainingRequest":"/src/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/pages/ItemInformation.vue?vue&type=template&id=38457aa5&","dependencies":[{"path":"/src/src/pages/ItemInformation.vue","mtime":1582822556000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1583055144000},{"path":"/src/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1583055150000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1583055144000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1583055150000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}