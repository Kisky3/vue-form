{"remainingRequest":"/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kou/Desktop/vue-form/src/components/molecules/UserAddress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kou/Desktop/vue-form/src/components/molecules/UserAddress.vue","mtime":1580696694713},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB7IFZhbGlkYXRpb25Qcm92aWRlciwgZXh0ZW5kIH0gZnJvbSAidmVlLXZhbGlkYXRlIjsKaW1wb3J0IFJlcXVpcmVUYWcgZnJvbSAiLi8uLi9hdG9tcy9SZXF1aXJlVGFnIjsKaW1wb3J0IGFwaSBmcm9tICJAL2FwaS9pbmZvIjsKaW1wb3J0IHNldHRpbmdzIGZyb20gIi4vLi4vLi4vc2V0dGluZ3Mvc2V0dGluZyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlVzZXJDaXRpZXMiLAogIHByb3BzOiBbIml0ZW1EYXRhIl0sCiAgY29tcG9uZW50czogewogICAgLy8gVmFsaWRhdGlvblByb3ZpZGVyCiAgICBSZXF1aXJlVGFnCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcjogewogICAgICAgIHByZWZlY3R1cmVzOiBudWxsLAogICAgICAgIGNpdGllczogbnVsbCwKICAgICAgICB0b3duOiBudWxsCiAgICAgIH0sCiAgICAgIGNpdHlMaXN0OiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwcmVmZWN0dXJlTGlzdDogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiBzZXR0aW5ncy5wcmVmZWN0dXJlTGlzdDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZUNpdHlMaXN0OiBmdW5jdGlvbihwcmVmQ29kZSkgewogICAgICBsZXQgY2l0eUxpc3QgPSBbXTsKICAgICAgY29uc3QgcXMgPSByZXF1aXJlKCJxcyIpOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgIGFwaQogICAgICAgICAgLmdldENpdHlMaXN0KHByZWZDb2RlKQogICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgIHJlc29sdmUoZGF0YSwgZGF0YSk7CiAgICAgICAgICAgIGNpdHlMaXN0ID0gZGF0YTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSk7CiAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["UserAddress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserAddress.vue","sourceRoot":"src/components/molecules","sourcesContent":["<template>\n  <div class=\"input-container\">\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>県名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select\n            v-model=\"user.prefectures\"\n            @change=\"changeCityList(user.prefectures)\"\n          >\n            <option disabled=\"disabled\" :value=\"null\">\n              都道府県を選択してください</option\n            >\n            <option\n              v-for=\"(pref, index) in prefectureList\"\n              :value=\"pref.prefCode\"\n              :key=\"index\"\n              >{{ pref.prefName }}</option\n            >\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>市区町村</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select\n            v-model=\"user.cities\"\n            @change=\"(townsList = null), submitCities(user.cities)\"\n          >\n            <option disabled=\"disabled\" :value=\"null\">\n              市区町村を選択してください</option\n            >\n            <option\n              v-for=\"(city, index) in cityList\"\n              :value=\"city.prefCode\"\n              :key=\"index\"\n              >{{ city.prefName }}</option\n            >\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <!-- 商用の適切のAPIはまだ決めてないため、実装は一旦止まる\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>町域名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-towns\" name=\"geoapi-towns\">\n            <option value=\"町域を選択してください\">選択してください</option>\n          </select>\n        </div>\n      </div>\n    </div>-->\n  </div>\n</template>\n<style>\n.select-wrap {\n  margin: 0 0 10px 0;\n  position: relative;\n}\n.icon-pulldown {\n  position: absolute;\n  right: 5px;\n  top: 50%;\n  z-index: 2;\n  color: #999;\n  -webkit-transform: translate(0, -50%);\n  transform: translate(0, -50%);\n}\n/* カテゴリーアニメーション */\n.expand-enter-active,\n.expand-leave-active {\n  transition: opacity 0.5s;\n}\n.expand-enter,\n.expand-leave-to {\n  opacity: 0;\n}\n</style>\n\n<script>\n// import { ValidationProvider, extend } from \"vee-validate\";\nimport RequireTag from \"./../atoms/RequireTag\";\nimport api from \"@/api/info\";\nimport settings from \"./../../settings/setting\";\n\nexport default {\n  name: \"UserCities\",\n  props: [\"itemData\"],\n  components: {\n    // ValidationProvider\n    RequireTag\n  },\n  data() {\n    return {\n      user: {\n        prefectures: null,\n        cities: null,\n        town: null\n      },\n      cityList: []\n    };\n  },\n  computed: {\n    prefectureList: function() {\n      return settings.prefectureList;\n    }\n  },\n  methods: {\n    changeCityList: function(prefCode) {\n      let cityList = [];\n      const qs = require(\"qs\");\n      return new Promise((resolve, reject) => {\n        api\n          .getCityList(prefCode)\n          .then(data => {\n            resolve(data, data);\n            cityList = data;\n          })\n          .catch(error => reject(error));\n      });\n    }\n  }\n};\n</script>\n"]}]}