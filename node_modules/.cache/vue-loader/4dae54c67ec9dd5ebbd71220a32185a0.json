{"remainingRequest":"/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/components/molecules/ImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/src/src/components/molecules/ImageUpload.vue","mtime":1581237942000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/src/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgbGFtYmRhIGZyb20gIi4uLy4uL2FwaS9sYW1iZGEiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkltYWdlVXBsb2FkIiwKICBwcm9wczogWyJpbmRleCIsICJpbWFnZSIsICJpdGVtSW5kZXgiXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoewogICAgICBpbWFnZUxpc3Q6ICJpdGVtSW5mb3JtYXRpb24vZ2V0SW1hZ2VMaXN0IiwKICAgICAgaXRlbUxpc3Q6ICJpdGVtSW5mb3JtYXRpb24vZ2V0SXRlbUxpc3QiCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyh7CiAgICAgIHNhdmVTdG9yZUltYWdlTGlzdDogIml0ZW1JbmZvcm1hdGlvbi9zYXZlSW1hZ2VMaXN0IgogICAgfSksCiAgICBmaWxlQ2xpY2s6IGZ1bmN0aW9uKCkgewogICAgICAkKCIjdXBsb2FkXyIgKyB0aGlzLmluZGV4KS5jbGljaygpOwogICAgfSwKICAgIG9uRmlsZUNoYW5nZTogZnVuY3Rpb24oZSkgewogICAgICB2YXIgZmlsZXMgPSBlLnRhcmdldC5maWxlcyB8fCBlLmRhdGFUcmFuc2Zlci5maWxlczsKICAgICAgdGhpcy5jcmVhdGVJbWFnZShmaWxlc1swXSk7CiAgICB9LAogICAgY3JlYXRlSW1hZ2UoZmlsZSkgewogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICB2bS5pbWFnZS50aHVtbmFpbCA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICB2bS5pbWFnZS51cGxvYWRGaWxlID0gZmlsZTsKICAgICAgICB2bS5pbWFnZS5uYW1lID0gZmlsZS5uYW1lOwogICAgICB9OwogICAgICB2bS5wcmV2aWV3SW1hZ2Uodm0uaW1hZ2UpOwogICAgICB2bS5zYXZlSW1hZ2VTdG9yZSh2bS5pbWFnZSk7CiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgICB2bS5zdWJtaXRJbWFnZShmaWxlKTsKICAgIH0sCiAgICBzYXZlSW1hZ2VTdG9yZTogZnVuY3Rpb24oaW1hZ2UpIHsKICAgICAgLyog5ZCE5ZWG5ZOB44Gu55S75YOP44Kq44OW44K444Kn44Kv44OI44Gr5L+d5a2YICovCiAgICAgIGxldCBvYmogPSB0aGlzLmltYWdlTGlzdFt0aGlzLml0ZW1JbmRleF07CgogICAgICBvYmouc3BsaWNlKHRoaXMuaW5kZXgsIDEsIGltYWdlKTsKICAgICAgdGhpcy5pbWFnZUxpc3Quc3BsaWNlKHRoaXMuaXRlbUluZGV4LCAxLCBvYmopOwogICAgICB0aGlzLnNhdmVTdG9yZUltYWdlTGlzdCh0aGlzLmltYWdlTGlzdCk7CiAgICB9LAogICAgcHJldmlld0ltYWdlOiBmdW5jdGlvbihpbWFnZSkgewogICAgICByZXR1cm4gISgKICAgICAgICBpbWFnZS50aHVtbmFpbCA9PT0gIiIgJiYKICAgICAgICBPYmplY3Qua2V5cyhpbWFnZS51cGxvYWRGaWxlKS5sZW5ndGggPT09IDAgJiYKICAgICAgICBpbWFnZS5uYW1lID09PSAiIgogICAgICApOwogICAgfSwKICAgIGRlbGV0ZUltYWdlOiBmdW5jdGlvbigpIHsKICAgICAgdGhpcy5pbWFnZSA9IHsKICAgICAgICB0aHVtbmFpbDogIiIsCiAgICAgICAgdXBsb2FkRmlsZToge30sCiAgICAgICAgbmFtZTogIiIKICAgICAgfTsKCiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICBsZXQgb2JqID0gdGhpcy5pbWFnZUxpc3RbdGhpcy5pdGVtSW5kZXhdOwogICAgICBvYmouc3BsaWNlKHRoaXMuaW5kZXgsIDEsIHRoaXMuaW1hZ2UpOwogICAgICB0aGlzLmltYWdlID0gb2JqOwogICAgICB0aGlzLnNhdmVTdG9yZUltYWdlTGlzdCh0aGlzLmltYWdlTGlzdC5zcGxpY2UodGhpcy5pdGVtSW5kZXgsIDEsIG9iaikpOwogICAgfSwKICAgIGFzeW5jIGdldFByZXNpZ25lZFVybChmaWxlKSB7CiAgICAgIHJldHVybiBhd2FpdCBsYW1iZGEKICAgICAgICAuZ2V0U2lnbmVkVVJMKGZpbGUpCiAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXQgcmVzIGZyb20gbGFtYmRhJykKICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLnVybCkKICAgICAgICAgIHJldHVybiByZXMuZGF0YS51cmw7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyID0+IHsKICAgICAgICAgIGNvbnNvbGUsIGxvZygiZXJyb3IiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgfSk7CiAgICB9LAogICAgYXN5bmMgdXBsb2FkUzMocHJlU2lnbmVkVXJsLCB1cF9maWxlKSB7CiAgICAgIHRyeSB7CiAgICAgIAogICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7CiAgICAgICAgICAiY29udGVudC10eXBlIjogImltYWdlL2pwZWciCiAgICAgICAgfTsKICAgICAgICBjb25zb2xlLmxvZygiUzMg44Ki44OD44OX44Ot44O844OJIOmWi+WniyIpOwoKICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KHByZVNpZ25lZFVybCwgdXBfZmlsZSwgewogICAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKCdTMyDjgqLjg4Pjg5fjg63jg7zjg4kgcmVzcG9uc2UnKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgY29uc29sZS5sb2coIlMzIOOCouODg+ODl+ODreODvOODiSDmiJDlip8iKTsKICAgICAgICByZXR1cm4gZGF0YS51cmwgKyAiLyIgKyBkYXRhLmZpZWxkcy5rZXk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgY29uc29sZS5sb2coIlMzIOOCouODg+ODl+ODreODvOODiSDjgqjjg6njg7wiKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHN1Ym1pdEltYWdlKHVwbG9hZF9maWxlKSB7CiAgICAgIGxldCBwcmVTaWduZWRVcmwgPSBhd2FpdCB0aGlzLmdldFByZXNpZ25lZFVybCh1cGxvYWRfZmlsZSk7CiAgICAgIGNvbnNvbGUubG9nKCJwcmVTaWduZWRVcmwiKQogICAgICBjb25zb2xlLmxvZyhwcmVTaWduZWRVcmwpCiAgICAgIGxldCB1cGxvYWRTM1BhdGggPSBhd2FpdCB0aGlzLnVwbG9hZFMzKHByZVNpZ25lZFVybCwgdXBsb2FkX2ZpbGUpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["ImageUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImageUpload.vue","sourceRoot":"src/components/molecules","sourcesContent":["<template>\n  <div class=\"c-upload-btn\" @click=\"fileClick\">\n    <span\n      v-show=\"!previewImage(image)\"\n      class=\"iconfont icon-camera c-upload-camera\"\n    ></span>\n    <div v-if=\"previewImage(image)\">\n      <div class=\"c-upload-btn active\">\n        <img :src=\"image.thumnail\" class=\"c-upload-img\" />\n      </div>\n      <a class=\"c-close_button\" @click=\"deleteImage\"></a>\n    </div>\n    <input\n      :id=\"'upload_' + index\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"onFileChange($event)\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from \"vuex\";\nimport lambda from \"../../api/lambda\";\nimport axios from \"axios\";\nexport default {\n  name: \"ImageUpload\",\n  props: [\"index\", \"image\", \"itemIndex\"],\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapGetters({\n      imageList: \"itemInformation/getImageList\",\n      itemList: \"itemInformation/getItemList\"\n    })\n  },\n  methods: {\n    ...mapActions({\n      saveStoreImageList: \"itemInformation/saveImageList\"\n    }),\n    fileClick: function() {\n      $(\"#upload_\" + this.index).click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      this.createImage(files[0]);\n    },\n    createImage(file) {\n      var reader = new FileReader();\n      var vm = this;\n      reader.onload = function(e) {\n        vm.image.thumnail = e.target.result;\n        vm.image.uploadFile = file;\n        vm.image.name = file.name;\n      };\n      vm.previewImage(vm.image);\n      vm.saveImageStore(vm.image);\n      reader.readAsDataURL(file);\n      vm.submitImage(file);\n    },\n    saveImageStore: function(image) {\n      /* 各商品の画像オブジェクトに保存 */\n      let obj = this.imageList[this.itemIndex];\n\n      obj.splice(this.index, 1, image);\n      this.imageList.splice(this.itemIndex, 1, obj);\n      this.saveStoreImageList(this.imageList);\n    },\n    previewImage: function(image) {\n      return !(\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    deleteImage: function() {\n      this.image = {\n        thumnail: \"\",\n        uploadFile: {},\n        name: \"\"\n      };\n\n      event.stopPropagation();\n      let obj = this.imageList[this.itemIndex];\n      obj.splice(this.index, 1, this.image);\n      this.image = obj;\n      this.saveStoreImageList(this.imageList.splice(this.itemIndex, 1, obj));\n    },\n    async getPresignedUrl(file) {\n      return await lambda\n        .getSignedURL(file)\n        .then(res => {\n          console.log('get res from lambda')\n          console.log(res.data.url)\n          return res.data.url;\n        })\n        .catch(err => {\n          console, log(\"error\");\n          console.log(err);\n        });\n    },\n    async uploadS3(preSignedUrl, up_file) {\n      try {\n      \n        const headers = {\n          \"content-type\": \"image/jpeg\"\n        };\n        console.log(\"S3 アップロード 開始\");\n\n        let response = await axios.post(preSignedUrl, up_file, {\n          headers: headers\n        });\n        console.log('S3 アップロード response');\n        console.log(response);\n        console.log(\"S3 アップロード 成功\");\n        return data.url + \"/\" + data.fields.key;\n      } catch (error) {\n        console.log(error)\n        console.log(\"S3 アップロード エラー\");\n      }\n    },\n    async submitImage(upload_file) {\n      let preSignedUrl = await this.getPresignedUrl(upload_file);\n      console.log(\"preSignedUrl\")\n      console.log(preSignedUrl)\n      let uploadS3Path = await this.uploadS3(preSignedUrl, upload_file);\n    }\n  }\n};\n</script>\n<style>\n.c-upload-btn {\n  width: 180px;\n  height: 180px;\n  border: 1px dashed #dedede;\n  margin: 15px 10px 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: #fff;\n}\n\n.c-upload-btn.active {\n  border: 2px solid #b1b1b1;\n}\n\n.c-upload-camera {\n  font-size: 60px;\n  color: #dedede;\n  font-weight: bold;\n}\n\n.upload_warp {\n  height: 20vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.c-upload-img {\n  max-width: 100%;\n  float: left;\n  line-height: 100px;\n  display: table-cell;\n  text-align: center;\n  background-color: #fff;\n  cursor: pointer;\n  height: 100%;\n}\n\n.c-close_button::before {\n  content: \"\\00D7\";\n}\n\n.c-close_button {\n  position: absolute;\n  width: 100%;\n  height: 30%;\n  left: 0;\n  bottom: 0;\n  font-size: 35px;\n  font-weight: bold;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* sp レスポンス対応 */\n@media only screen and (max-width: 767px) {\n  .c-upload-btn {\n    width: 25vw;\n    height: 25vw;\n  }\n\n  .c-upload-camera {\n    font-size: 40px;\n  }\n}\n</style>\n"]}]}