{"remainingRequest":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js!/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kou/Desktop/vue-form/src/components/molecules/UserCities.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kou/Desktop/vue-form/src/components/molecules/UserCities.vue","mtime":1580463020880},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserCities.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"input-container\">\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>県名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-prefectures\" name=\"geoapi-prefectures\">\n            <option value=\"都道府県を選択してください\">選択してください</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>市区町村</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-cities\" name=\"geoapi-cities\">\n            <option value=\"市区町村名を選択してください\"\n              >選択してください</option\n            >\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>町域名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-towns\" name=\"geoapi-towns\">\n            <option value=\"町域を選択してください\">選択してください</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style>\n.select-wrap {\n  margin: 0 0 10px 0;\n  position: relative;\n}\n.icon-pulldown {\n  position: absolute;\n  right: 5px;\n  top: 50%;\n  z-index: 2;\n  color: #999;\n  -webkit-transform: translate(0, -50%);\n  transform: translate(0, -50%);\n}\n/* カテゴリーアニメーション */\n.expand-enter-active,\n.expand-leave-active {\n  transition: opacity 0.5s;\n}\n.expand-enter,\n.expand-leave-to {\n  opacity: 0;\n}\n</style>\n\n<script>\n// import { ValidationProvider, extend } from \"vee-validate\";\nimport RequireTag from \"./../atoms/RequireTag\";\n\nvar geoapi_url = \"http://geoapi.heartrails.com/api/json?jsonp=?\";\nvar geoapi_area_selected;\nvar geoapi_prefecture_selected;\nvar geoapi_city_selected;\nvar geoapi_town_selected;\nvar geoapi_towns = null;\n\nexport default {\n  name: \"UserCities\",\n  props: [\"itemData\"],\n  components: {\n    // ValidationProvider\n    RequireTag\n  },\n  data() {\n    return {};\n  },\n  mounted: function() {\n    this.geoApiInitialize();\n  },\n  methods: {\n    geoApiInitialize: function() {\n      if ($(\"#geoapi-prefectures\").length > 0) {\n        this.geoApiInitializePrefectures();\n      }\n      this.geoApiInitializeCities();\n      this.geoApiInitializeTowns();\n      $(\"#geoapi-address\").attr(\"disabled\", true);\n      $(\"#geoapi-areas\").change(this.geoApiChangeArea);\n      $(\"#geoapi-prefectures\").change(this.geoApiChangePrefecture);\n      $(\"#geoapi-cities\").change(this.geoApiChangeCity);\n      $(\"#geoapi-towns\").change(this.geoApiChangeTown);\n      $(\"#geoapi-postal-4\").keyup(this.geoApiSearchByPostal);\n    },\n    geoApiInitializePrefectures: function() {\n      $(\"#geoapi-prefectures\").html(\n        '<option value=\"県名を選択してください\">県名を選択してください</option>'\n      );\n      $.getJSON(\n        geoapi_url,\n        { method: \"getPrefectures\" },\n        this.geoApiSetPrefectures\n      );\n    },\n    geoApiInitializeCities: function() {\n      $(\"#geoapi-cities\").html(\n        '<option value=\"市区町村を選択してください\">市区町村を選択してください&nbsp;&nbsp;</option>'\n      );\n    },\n    geoApiInitializeTowns: function() {\n      $(\"#geoapi-towns\").html(\n        '<option value=\"町域名を選択してください\">町域名を選択してください&nbsp;&nbsp;</option>'\n      );\n    },\n    geoApiChangeArea: function() {\n      geoapi_area_selected = $(\"#geoapi-areas option:selected\");\n      this.geoApiInitializeCities();\n      this.geoApiInitializeTowns();\n      if (geoapi_area_selected.val() == \"繧ｨ繝ｪ繧｢繧帝∈謚槭＠縺ｦ縺上□縺輔＞\") {\n        return;\n      }\n      $.getJSON(\n        geoapi_url,\n        { method: \"getCities\", area: geoapi_area_selected.text() },\n        this.setCities\n      );\n    },\n    geoApiChangePrefecture: function() {\n      geoapi_prefecture_selected = $(\"#geoapi-prefectures option:selected\");\n      this.geoApiInitializeCities();\n      this.geoApiInitializeTowns();\n      if (geoapi_prefecture_selected.val() == \"県名を選択してください\") {\n        return;\n      }\n      $.getJSON(\n        geoapi_url,\n        { method: \"getCities\", prefecture: geoapi_prefecture_selected.text() },\n        this.setCities\n      );\n    },\n    geoApiSetAreas: function(json) {\n      var areas = json.response.area;\n      for (var index = 0; index < areas.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(areas[index]);\n        option.val(areas[index]);\n        $(\"#geoapi-areas\").append(option);\n      }\n    },\n    geoApiSetPrefectures: function(json) {\n      var prefectures = json.response.prefecture;\n      for (var index = 0; index < prefectures.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(prefectures[index]);\n        option.val(prefectures[index]);\n        $(\"#geoapi-prefectures\").append(option);\n      }\n    },\n\n    setCities: function(json) {\n      var cities = json.response[\"location\"];\n      for (var index = 0; index < cities.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(cities[index].city);\n        option.val(cities[index].city);\n        $(\"#geoapi-cities\").append(option);\n      }\n    },\n    geoApiChangeCity: function() {\n      geoapi_city_selected = $(\"#geoapi-cities option:selected\");\n      this.geoApiInitializeTowns();\n      if (geoapi_city_selected.val() == \"都市\") {\n        return;\n      }\n      $.getJSON(\n        geoapi_url,\n        { method: \"getTowns\", city: geoapi_city_selected.text() },\n        this.geoApiSetTowns\n      );\n    },\n    geoApiSetTowns: function(json) {\n      geoapi_towns = json.response[\"location\"];\n      var cities = json.response[\"location\"];\n      for (var index = 0; index < cities.length; index++) {\n        var option = $(document.createElement(\"option\"));\n        option.text(cities[index].town);\n        option.val(cities[index].town);\n        $(\"#geoapi-towns\").append(option);\n      }\n    },\n    geoApiChangeTown: function() {\n      geoapi_town_selected = $(\"#geoapi-towns option:selected\");\n      if (geoapi_town_selected.val() == \"町域名を選択してください\") {\n        return;\n      }\n      var town = this.geoApiGetTownObject(geoapi_town_selected.text());\n    },\n\n    geoApiGetTownObject: function(name) {\n      var town = null;\n      for (var index = 0; index < geoapi_towns.length; index++) {\n        if (name == geoapi_towns[index].town) {\n          town = geoapi_towns[index];\n          break;\n        }\n      }\n      return town;\n    },\n    geoApiSearchByPostal: function(e) {\n      var key_code = e.keyCode || event.keyCode;\n      if (\n        key_code != 9 &&\n        key_code != 37 &&\n        key_code != 38 &&\n        key_code != 39 &&\n        key_code != 40 &&\n        $(\"#geoapi-postal-4\").val().length == 4\n      ) {\n        var geoapi_postal_3 = $(\"input#geoapi-postal-3\");\n        var geoapi_postal_4 = $(\"input#geoapi-postal-4\");\n        if (!geoapi_postal_3.val() || !geoapi_postal_4.val()) {\n          return false;\n        }\n        $.getJSON(\n          geoapi_url,\n          {\n            method: \"searchByPostal\",\n            postal: geoapi_postal_3.val() + geoapi_postal_4.val()\n          },\n          geoapiSearchByPostalAfter\n        );\n      }\n    },\n    geoapiSearchByPostalAfter: function(json) {\n      if (json.response.error) {\n        alert(json.response.error);\n        return false;\n      }\n      var addresses = json.response[\"location\"];\n      this.geiApiGetAddress(addresses);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/molecules"}]}