{"remainingRequest":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js!/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kou/Desktop/vue-form/src/components/molecules/UserAddress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kou/Desktop/vue-form/src/components/molecules/UserAddress.vue","mtime":1580707928852},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IFZhbGlkYXRpb25Qcm92aWRlciwgZXh0ZW5kIH0gZnJvbSAidmVlLXZhbGlkYXRlIjsKaW1wb3J0IFJlcXVpcmVUYWcgZnJvbSAiLi8uLi9hdG9tcy9SZXF1aXJlVGFnIjsKaW1wb3J0IGFwaSBmcm9tICJAL2FwaS9pbmZvIjsKaW1wb3J0IHNldHRpbmdzIGZyb20gIi4vLi4vLi4vc2V0dGluZ3Mvc2V0dGluZyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVXNlckNpdGllcyIsCiAgY29tcG9uZW50czogewogICAgVmFsaWRhdGlvblByb3ZpZGVyOiBWYWxpZGF0aW9uUHJvdmlkZXIsCiAgICBSZXF1aXJlVGFnOiBSZXF1aXJlVGFnCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJlZmVjdHVyZTogbnVsbCwKICAgICAgY2l0eTogbnVsbCwKICAgICAgdG93bjogbnVsbCwKICAgICAgY2l0eUxpc3Q6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHByZWZlY3R1cmVMaXN0OiBmdW5jdGlvbiBwcmVmZWN0dXJlTGlzdCgpIHsKICAgICAgcmV0dXJuIHNldHRpbmdzLnByZWZlY3R1cmVMaXN0OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlQ2l0eUxpc3Q6IGZ1bmN0aW9uIGNoYW5nZUNpdHlMaXN0KHByZWZDb2RlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGFwaS5nZXRDaXR5TGlzdChwcmVmQ29kZSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgcmVzb2x2ZShkYXRhLCBkYXRhKTsKICAgICAgICAgIF90aGlzLmNpdHlMaXN0ID0gZGF0YS5kYXRhOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGNoYW5nZVRvd25MaXN0OiBmdW5jdGlvbiBjaGFuZ2VUb3duTGlzdChjaXR5Q29kZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgYXBpLmdldFRvd25MaXN0KGNpdHlDb2RlKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICByZXNvbHZlKGRhdGEsIGRhdGEpOwogICAgICAgICAgX3RoaXMyLmNpdHlMaXN0ID0gZGF0YS5kYXRhOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHN1Ym1pdFByZWZlY3R1cmU6IGZ1bmN0aW9uIHN1Ym1pdFByZWZlY3R1cmUoKSB7CiAgICAgIHRoaXMuJGVtaXQoInN1Ym1pdFByZWZlY3R1cmUiLCB0aGlzLnByZWZlY3R1cmUpOwogICAgfSwKICAgIHN1Ym1pdENpdHk6IGZ1bmN0aW9uIHN1Ym1pdENpdHkoKSB7CiAgICAgIHRoaXMuJGVtaXQoInN1Ym1pdENpdHkiLCB0aGlzLmNpdHkpOwogICAgfSwKICAgIHN1Ym1pdFRvd246IGZ1bmN0aW9uIHN1Ym1pdFRvd24oKSB7CiAgICAgIHRoaXMuJGVtaXQoInN1Ym1pdFRvd24iLCB0aGlzLnRvd24pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["UserAddress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA,SAAA,kBAAA,EAAA,MAAA,QAAA,cAAA;AACA,OAAA,UAAA,MAAA,uBAAA;AACA,OAAA,GAAA,MAAA,YAAA;AACA,OAAA,QAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA,kBADA;AAEA,IAAA,UAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,cAAA,EAAA,0BAAA;AACA,aAAA,QAAA,CAAA,cAAA;AACA;AAHA,GAdA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,wBAAA,QAAA,EAAA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,GAAA,CACA,WADA,CACA,QADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA;AACA,SALA,EAMA,KANA,CAMA,UAAA,KAAA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA;AAAA,SANA;AAOA,OARA,CAAA;AASA,KAXA;AAYA,IAAA,cAAA,EAAA,wBAAA,QAAA,EAAA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,GAAA,CACA,WADA,CACA,QADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA;AACA,SALA,EAMA,KANA,CAMA,UAAA,KAAA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA;AAAA,SANA;AAOA,OARA,CAAA;AASA,KAtBA;AAuBA,IAAA,gBAvBA,8BAuBA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,UAAA;AACA,KAzBA;AA0BA,IAAA,UA1BA,wBA0BA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,IAAA;AACA,KA5BA;AA6BA,IAAA,UA7BA,wBA6BA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,IAAA;AACA;AA/BA;AAnBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>都道府県</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <validation-provider rules=\"required\" name=\"都道府県\">\n            <div slot-scope=\"ProviderProps\">\n              <select\n                v-model=\"prefecture\"\n                @change=\"\n                  changeCityList(prefecture),\n                    submitPrefecture()\n                \"\n                :class=\"ProviderProps.errors[0] ? 'error-active' : ''\"\n              >\n                <option disabled=\"disabled\" :value=\"null\">\n                  都道府県を選択してください</option\n                >\n                <option\n                  v-for=\"(pref, index) in prefectureList\"\n                  :value=\"pref.prefCode\"\n                  :key=\"index\"\n                  >{{ pref.prefName }}</option\n                >\n              </select>\n              <div class=\"error-message\">\n                <span\n                  v-show=\"ProviderProps.errors[0]\"\n                  class=\"iconfont icon-warn\"\n                ></span>\n                {{ ProviderProps.errors[0] }}\n              </div>\n            </div>\n          </validation-provider>\n        </div>\n      </div>\n    </div>\n\n    <transition name=\"expand\">\n      <div class=\"input-container\" >\n        <div class=\"c-page-row\" v-show=\"prefecture !== null\">\n          <div class=\"c-page-subtitle\">\n            <p>市区町村</p>\n            <require-tag />\n          </div>\n          <div class=\"input-container\">\n            <div class=\"select-wrap\">\n              <i class=\"iconfont icon-pulldown\"></i>\n              <validation-provider rules=\"required\" name=\"市区町村\">\n                <div slot-scope=\"ProviderProps\">\n                  <select\n                    v-model=\"city\"\n                    @change=\"submitCity()\"\n                    :class=\"ProviderProps.errors[0] ? 'error-active' : ''\"\n                  >\n                    <option disabled=\"disabled\" :value=\"null\">\n                      市区町村を選択してください</option\n                    >\n                    <option\n                      v-for=\"(city, index) in cityList\"\n                      :value=\"city.id\"\n                      :key=\"index\"\n                      >{{ city.name }}</option\n                    >\n                  </select>\n                  <div class=\"error-message\">\n                    <span\n                      v-show=\"ProviderProps.errors[0]\"\n                      class=\"iconfont icon-warn\"\n                    ></span>\n                    {{ ProviderProps.errors[0] }}\n                  </div>\n                </div>\n              </validation-provider>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n\n    <!-- 商用の適切のAPIはまだ決めてないため、実装は一旦止まる\n    <div class=\"c-page-row\">\n      <div class=\"c-page-subtitle\">\n        <p>町域名</p>\n        <require-tag />\n      </div>\n      <div class=\"input-container\">\n        <div class=\"select-wrap\">\n          <i class=\"iconfont icon-pulldown\"></i>\n          <select id=\"geoapi-towns\" name=\"geoapi-towns\">\n            <option value=\"町域を選択してください\">選択してください</option>\n          </select>\n        </div>\n      </div>\n    </div>-->\n  </div>\n</template>\n<style>\n.select-wrap {\n  margin: 0 0 10px 0;\n  position: relative;\n}\n.icon-pulldown {\n  position: absolute;\n  right: 5px;\n  top: 50%;\n  z-index: 2;\n  color: #999;\n  -webkit-transform: translate(0, -50%);\n  transform: translate(0, -50%);\n}\n/* カテゴリーアニメーション */\n.expand-enter-active,\n.expand-leave-active {\n  transition: opacity 1s;\n}\n.expand-enter,\n.expand-leave-to {\n  opacity: 0;\n}\n</style>\n\n<script>\nimport { ValidationProvider, extend } from \"vee-validate\";\nimport RequireTag from \"./../atoms/RequireTag\";\nimport api from \"@/api/info\";\nimport settings from \"./../../settings/setting\";\n\nexport default {\n  name: \"UserCities\",\n  components: {\n    ValidationProvider,\n    RequireTag\n  },\n  data() {\n    return {\n    prefecture: null,\n    city: null,\n    town: null,\n    cityList: []\n    };\n  },\n  computed: {\n    prefectureList: function() {\n      return settings.prefectureList;\n    }\n  },\n  methods: {\n    changeCityList: function(prefCode) {\n      return new Promise((resolve, reject) => {\n        api\n          .getCityList(prefCode)\n          .then(data => {\n            resolve(data, data);\n            this.cityList = data.data;\n          })\n          .catch(error => reject(error));\n      });\n    },\n    changeTownList: function(cityCode) {\n      return new Promise((resolve, reject) => {\n        api\n          .getTownList(cityCode)\n          .then(data => {\n            resolve(data, data);\n            this.cityList = data.data;\n          })\n          .catch(error => reject(error));\n      });\n    },\n    submitPrefecture() {\n      this.$emit(\"submitPrefecture\", this.prefecture );\n    },\n    submitCity() {\n      this.$emit(\"submitCity\", this.city);\n    },\n    submitTown() {\n      this.$emit(\"submitTown\", this.town );\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/molecules"}]}