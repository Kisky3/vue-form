{"remainingRequest":"/src/node_modules/babel-loader/lib/index.js!/src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/components/molecules/ImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/src/src/components/molecules/ImageUpload.vue","mtime":1581237942000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/src/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL3NyYy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgeyBtYXBBY3Rpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCBsYW1iZGEgZnJvbSAiLi4vLi4vYXBpL2xhbWJkYSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSW1hZ2VVcGxvYWQiLAogIHByb3BzOiBbImluZGV4IiwgImltYWdlIiwgIml0ZW1JbmRleCJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyh7CiAgICBpbWFnZUxpc3Q6ICJpdGVtSW5mb3JtYXRpb24vZ2V0SW1hZ2VMaXN0IiwKICAgIGl0ZW1MaXN0OiAiaXRlbUluZm9ybWF0aW9uL2dldEl0ZW1MaXN0IgogIH0pKSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKHsKICAgIHNhdmVTdG9yZUltYWdlTGlzdDogIml0ZW1JbmZvcm1hdGlvbi9zYXZlSW1hZ2VMaXN0IgogIH0pLCB7CiAgICBmaWxlQ2xpY2s6IGZ1bmN0aW9uIGZpbGVDbGljaygpIHsKICAgICAgJCgiI3VwbG9hZF8iICsgdGhpcy5pbmRleCkuY2xpY2soKTsKICAgIH0sCiAgICBvbkZpbGVDaGFuZ2U6IGZ1bmN0aW9uIG9uRmlsZUNoYW5nZShlKSB7CiAgICAgIHZhciBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzIHx8IGUuZGF0YVRyYW5zZmVyLmZpbGVzOwogICAgICB0aGlzLmNyZWF0ZUltYWdlKGZpbGVzWzBdKTsKICAgIH0sCiAgICBjcmVhdGVJbWFnZTogZnVuY3Rpb24gY3JlYXRlSW1hZ2UoZmlsZSkgewogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgdmFyIHZtID0gdGhpczsKCiAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgIHZtLmltYWdlLnRodW1uYWlsID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIHZtLmltYWdlLnVwbG9hZEZpbGUgPSBmaWxlOwogICAgICAgIHZtLmltYWdlLm5hbWUgPSBmaWxlLm5hbWU7CiAgICAgIH07CgogICAgICB2bS5wcmV2aWV3SW1hZ2Uodm0uaW1hZ2UpOwogICAgICB2bS5zYXZlSW1hZ2VTdG9yZSh2bS5pbWFnZSk7CiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgICB2bS5zdWJtaXRJbWFnZShmaWxlKTsKICAgIH0sCiAgICBzYXZlSW1hZ2VTdG9yZTogZnVuY3Rpb24gc2F2ZUltYWdlU3RvcmUoaW1hZ2UpIHsKICAgICAgLyog5ZCE5ZWG5ZOB44Gu55S75YOP44Kq44OW44K444Kn44Kv44OI44Gr5L+d5a2YICovCiAgICAgIHZhciBvYmogPSB0aGlzLmltYWdlTGlzdFt0aGlzLml0ZW1JbmRleF07CiAgICAgIG9iai5zcGxpY2UodGhpcy5pbmRleCwgMSwgaW1hZ2UpOwogICAgICB0aGlzLmltYWdlTGlzdC5zcGxpY2UodGhpcy5pdGVtSW5kZXgsIDEsIG9iaik7CiAgICAgIHRoaXMuc2F2ZVN0b3JlSW1hZ2VMaXN0KHRoaXMuaW1hZ2VMaXN0KTsKICAgIH0sCiAgICBwcmV2aWV3SW1hZ2U6IGZ1bmN0aW9uIHByZXZpZXdJbWFnZShpbWFnZSkgewogICAgICByZXR1cm4gIShpbWFnZS50aHVtbmFpbCA9PT0gIiIgJiYgT2JqZWN0LmtleXMoaW1hZ2UudXBsb2FkRmlsZSkubGVuZ3RoID09PSAwICYmIGltYWdlLm5hbWUgPT09ICIiKTsKICAgIH0sCiAgICBkZWxldGVJbWFnZTogZnVuY3Rpb24gZGVsZXRlSW1hZ2UoKSB7CiAgICAgIHRoaXMuaW1hZ2UgPSB7CiAgICAgICAgdGh1bW5haWw6ICIiLAogICAgICAgIHVwbG9hZEZpbGU6IHt9LAogICAgICAgIG5hbWU6ICIiCiAgICAgIH07CiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICB2YXIgb2JqID0gdGhpcy5pbWFnZUxpc3RbdGhpcy5pdGVtSW5kZXhdOwogICAgICBvYmouc3BsaWNlKHRoaXMuaW5kZXgsIDEsIHRoaXMuaW1hZ2UpOwogICAgICB0aGlzLmltYWdlID0gb2JqOwogICAgICB0aGlzLnNhdmVTdG9yZUltYWdlTGlzdCh0aGlzLmltYWdlTGlzdC5zcGxpY2UodGhpcy5pdGVtSW5kZXgsIDEsIG9iaikpOwogICAgfSwKICAgIGdldFByZXNpZ25lZFVybDogZnVuY3Rpb24gZ2V0UHJlc2lnbmVkVXJsKGZpbGUpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBnZXRQcmVzaWduZWRVcmwkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAobGFtYmRhLmdldFNpZ25lZFVSTChmaWxlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXQgcmVzIGZyb20gbGFtYmRhJyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS51cmwpOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5kYXRhLnVybDsKICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLCBsb2coImVycm9yIik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgdXBsb2FkUzM6IGZ1bmN0aW9uIHVwbG9hZFMzKHByZVNpZ25lZFVybCwgdXBfZmlsZSkgewogICAgICB2YXIgaGVhZGVycywgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gdXBsb2FkUzMkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBoZWFkZXJzID0gewogICAgICAgICAgICAgICAgImNvbnRlbnQtdHlwZSI6ICJpbWFnZS9qcGVnIgogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIlMzIOOCouODg+ODl+ODreODvOODiSDplovlp4siKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChheGlvcy5wb3N0KHByZVNpZ25lZFVybCwgdXBfZmlsZSwgewogICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTMyDjgqLjg4Pjg5fjg63jg7zjg4kgcmVzcG9uc2UnKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIlMzIOOCouODg+ODl+ODreODvOODiSDmiJDlip8iKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgZGF0YS51cmwgKyAiLyIgKyBkYXRhLmZpZWxkcy5rZXkpOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEyOwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDApOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJTMyDjgqLjg4Pjg5fjg63jg7zjg4kg44Ko44Op44O8Iik7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgbnVsbCwgW1swLCAxMl1dKTsKICAgIH0sCiAgICBzdWJtaXRJbWFnZTogZnVuY3Rpb24gc3VibWl0SW1hZ2UodXBsb2FkX2ZpbGUpIHsKICAgICAgdmFyIHByZVNpZ25lZFVybCwgdXBsb2FkUzNQYXRoOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHN1Ym1pdEltYWdlJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh0aGlzLmdldFByZXNpZ25lZFVybCh1cGxvYWRfZmlsZSkpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHByZVNpZ25lZFVybCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJwcmVTaWduZWRVcmwiKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwcmVTaWduZWRVcmwpOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHRoaXMudXBsb2FkUzMocHJlU2lnbmVkVXJsLCB1cGxvYWRfZmlsZSkpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHVwbG9hZFMzUGF0aCA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["ImageUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"c-upload-btn\" @click=\"fileClick\">\n    <span\n      v-show=\"!previewImage(image)\"\n      class=\"iconfont icon-camera c-upload-camera\"\n    ></span>\n    <div v-if=\"previewImage(image)\">\n      <div class=\"c-upload-btn active\">\n        <img :src=\"image.thumnail\" class=\"c-upload-img\" />\n      </div>\n      <a class=\"c-close_button\" @click=\"deleteImage\"></a>\n    </div>\n    <input\n      :id=\"'upload_' + index\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"onFileChange($event)\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from \"vuex\";\nimport lambda from \"../../api/lambda\";\nimport axios from \"axios\";\nexport default {\n  name: \"ImageUpload\",\n  props: [\"index\", \"image\", \"itemIndex\"],\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapGetters({\n      imageList: \"itemInformation/getImageList\",\n      itemList: \"itemInformation/getItemList\"\n    })\n  },\n  methods: {\n    ...mapActions({\n      saveStoreImageList: \"itemInformation/saveImageList\"\n    }),\n    fileClick: function() {\n      $(\"#upload_\" + this.index).click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      this.createImage(files[0]);\n    },\n    createImage(file) {\n      var reader = new FileReader();\n      var vm = this;\n      reader.onload = function(e) {\n        vm.image.thumnail = e.target.result;\n        vm.image.uploadFile = file;\n        vm.image.name = file.name;\n      };\n      vm.previewImage(vm.image);\n      vm.saveImageStore(vm.image);\n      reader.readAsDataURL(file);\n      vm.submitImage(file);\n    },\n    saveImageStore: function(image) {\n      /* 各商品の画像オブジェクトに保存 */\n      let obj = this.imageList[this.itemIndex];\n\n      obj.splice(this.index, 1, image);\n      this.imageList.splice(this.itemIndex, 1, obj);\n      this.saveStoreImageList(this.imageList);\n    },\n    previewImage: function(image) {\n      return !(\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    deleteImage: function() {\n      this.image = {\n        thumnail: \"\",\n        uploadFile: {},\n        name: \"\"\n      };\n\n      event.stopPropagation();\n      let obj = this.imageList[this.itemIndex];\n      obj.splice(this.index, 1, this.image);\n      this.image = obj;\n      this.saveStoreImageList(this.imageList.splice(this.itemIndex, 1, obj));\n    },\n    async getPresignedUrl(file) {\n      return await lambda\n        .getSignedURL(file)\n        .then(res => {\n          console.log('get res from lambda')\n          console.log(res.data.url)\n          return res.data.url;\n        })\n        .catch(err => {\n          console, log(\"error\");\n          console.log(err);\n        });\n    },\n    async uploadS3(preSignedUrl, up_file) {\n      try {\n      \n        const headers = {\n          \"content-type\": \"image/jpeg\"\n        };\n        console.log(\"S3 アップロード 開始\");\n\n        let response = await axios.post(preSignedUrl, up_file, {\n          headers: headers\n        });\n        console.log('S3 アップロード response');\n        console.log(response);\n        console.log(\"S3 アップロード 成功\");\n        return data.url + \"/\" + data.fields.key;\n      } catch (error) {\n        console.log(error)\n        console.log(\"S3 アップロード エラー\");\n      }\n    },\n    async submitImage(upload_file) {\n      let preSignedUrl = await this.getPresignedUrl(upload_file);\n      console.log(\"preSignedUrl\")\n      console.log(preSignedUrl)\n      let uploadS3Path = await this.uploadS3(preSignedUrl, upload_file);\n    }\n  }\n};\n</script>\n<style>\n.c-upload-btn {\n  width: 180px;\n  height: 180px;\n  border: 1px dashed #dedede;\n  margin: 15px 10px 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: #fff;\n}\n\n.c-upload-btn.active {\n  border: 2px solid #b1b1b1;\n}\n\n.c-upload-camera {\n  font-size: 60px;\n  color: #dedede;\n  font-weight: bold;\n}\n\n.upload_warp {\n  height: 20vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.c-upload-img {\n  max-width: 100%;\n  float: left;\n  line-height: 100px;\n  display: table-cell;\n  text-align: center;\n  background-color: #fff;\n  cursor: pointer;\n  height: 100%;\n}\n\n.c-close_button::before {\n  content: \"\\00D7\";\n}\n\n.c-close_button {\n  position: absolute;\n  width: 100%;\n  height: 30%;\n  left: 0;\n  bottom: 0;\n  font-size: 35px;\n  font-weight: bold;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* sp レスポンス対応 */\n@media only screen and (max-width: 767px) {\n  .c-upload-btn {\n    width: 25vw;\n    height: 25vw;\n  }\n\n  .c-upload-camera {\n    font-size: 40px;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/molecules"}]}