{"remainingRequest":"/src/node_modules/babel-loader/lib/index.js!/src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/components/molecules/ImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/src/src/components/molecules/ImageUpload.vue","mtime":1582073514000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/babel-loader/lib/index.js","mtime":1581297303000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1581297308000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ImageUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,MAAA,MAAA,kBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,WAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,UAAA,EAAA,UAAA,EAAA,WAAA,CAAA,CADA,CARA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,CAAA,CAAA,aAAA,KAAA,KAAA,CAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAAA,EAAA,sBAAA,CAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA,CAAA,YAAA,CAAA,KAAA;AACA,WAAA,WAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,KAAA;AACA,KAPA;AAQA,IAAA,WARA,uBAQA,IARA,EAQA,KARA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,cAAA,MATA,GASA,IAAA,UAAA,EATA;AAUA,cAAA,EAVA,GAUA,IAVA;AAWA,cAAA,GAXA,GAWA,EAXA;;AAYA,cAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA,gBAAA,GAAA,CAAA,QAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AACA,gBAAA,GAAA,CAAA,UAAA,GAAA,IAAA;AACA,gBAAA,GAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAHA,CAKA;;AACA,oBAAA,EAAA,CAAA,eAAA,CAAA,GAAA,CAAA,EAAA;AACA,kBAAA,EAAA,CAAA,WAAA,CAAA,UAAA;AACA,iBAFA,MAEA;AACA,sBAAA,QAAA,GAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,kBAAA,EAAA,CAAA,aAAA,CAAA,GAAA,EAAA,KAAA;AACA,kBAAA,EAAA,CAAA,UAAA,CAAA,KAAA,EAAA,QAAA;AACA;AACA,eAbA;;AAcA,cAAA,MAAA,CAAA,aAAA,CAAA,IAAA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA,IAAA,eAAA,EAAA,yBAAA,KAAA,EAAA;AACA,aACA,KAAA,CAAA,QAAA,KAAA,EAAA,IACA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,EAAA,MAAA,KAAA,CADA,IAEA,KAAA,CAAA,IAAA,KAAA,EAHA;AAKA,KAlCA;AAmCA,IAAA,UAnCA,sBAmCA,KAnCA,EAmCA,QAnCA,EAmCA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,KAAA,IAAA,QAAA;AACA,WAAA,YAAA;AACA,KAtCA;AAuCA,IAAA,aAAA,EAAA,uBAAA,KAAA,EAAA;AACA;AACA,UAAA,GAAA,GAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AAEA,MAAA,GAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,CAAA,EAAA,KAAA;AACA,WAAA,SAAA,CAAA,MAAA,CAAA,KAAA,SAAA,EAAA,CAAA,EAAA,GAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,KAAA,SAAA;AACA,KA9CA;AA+CA,IAAA,YA/CA,0BA+CA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,QAAA,EADA,CAEA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,KAAA,QAAA;AACA,KAnDA;AAoDA,IAAA,YAAA,EAAA,sBAAA,KAAA,EAAA;AACA,aAAA,EACA,KAAA,CAAA,QAAA,KAAA,EAAA,IACA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,EAAA,MAAA,KAAA,CADA,IAEA,KAAA,CAAA,IAAA,KAAA,EAHA,CAAA;AAKA,KA1DA;AA2DA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,KAAA,GAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA;AAMA,MAAA,KAAA,CAAA,eAAA;AACA,UAAA,GAAA,GAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,CAAA,EAAA,KAAA,KAAA;AACA,WAAA,KAAA,GAAA,GAAA;AACA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,KAAA,SAAA,EAAA,CAAA,EAAA,GAAA,CAAA;AACA;;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,KAAA,KAAA,EAAA,KAAA,QAAA;AACA,KA1EA;AA2EA,IAAA,eA3EA,2BA2EA,IA3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA4EA,MAAA,CACA,YADA,CACA,IADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,uBAAA,GAAA,CAAA,IAAA,CAAA,SAAA;AACA,eAJA,EAKA,KALA,CAKA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,eAPA,CA5EA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqFA,IAAA,QArFA,oBAqFA,YArFA,EAqFA,OArFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuFA;AACA,cAAA,OAxFA,GAwFA;AACA,gCAAA,OAAA,CAAA;AADA,eAxFA;AAAA;AAAA,8CA2FA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA,OAAA,EAAA;AACA,gBAAA,OAAA,EAAA;AADA,eAAA,CA3FA;;AAAA;AA2FA,cAAA,QA3FA;;AA8FA,kBAAA,YAAA,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA,qBAAA,QAAA,GAAA,YAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA;;AAhGA,gDAiGA,KAAA,QAjGA;;AAAA;AAAA;AAAA;AAmGA,cAAA,OAAA,CAAA,GAAA;;AAnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA,CAAA","sourcesContent":["<template>\n  <div class=\"c-upload-btn\" @click=\"fileClick\">\n    <span\n      v-show=\"!previewImage(image)\"\n      class=\"iconfont icon-camera c-upload-camera\"\n    ></span>\n    <div v-if=\"previewImage(image)\">\n      <div class=\"c-upload-btn active\">\n        <img :src=\"image.thumnail\" class=\"c-upload-img\" />\n      </div>\n      <a class=\"c-close_button\" @click=\"deleteImage\"></a>\n    </div>\n    <input\n      :id=\"'upload_' + index\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"onFileChange($event)\"\n    />\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { mapState } from \"vuex\";\nimport common from \"../../js/common\";\nimport lambda from \"../../api/lambda\";\nexport default {\n  name: \"ImageUpload\",\n  props: [\"index\", \"image\", \"itemIndex\"],\n  data() {\n    return {\n      imageKey: null\n    };\n  },\n  computed: {\n    ...mapState([\"itemData\", \"itemList\",\"imageList\"]),\n  },\n  methods: {\n    fileClick: function() {\n      $(\"#upload_\" + this.index).click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      this.createImage(files[0], this.index);\n    },\n    async createImage(file, index) {\n      var reader = new FileReader();\n      var vm = this;\n      var obj = {};\n      reader.onload = function(e) {\n        obj.thumnail = e.target.result;\n        obj.uploadFile = file;\n        obj.name = file.name;\n\n        // アップロード成功すれば保存する\n        if (vm.checkEmptyImage(obj)) {\n          vm.setErrorMsg(\"no-image\");\n        } else {\n          let imageKey = common.getImgKey(file);\n          vm.saveImageData(obj, index);\n          vm.saveImgKey(index, imageKey)\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n    checkEmptyImage: function(image) {\n      return (\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    saveImgKey(index, imageKey) {\n      this.itemData.images[index] = imageKey;\n      this.saveItemData();\n    },\n    saveImageData: function(image) {\n      /* 各商品の画像オブジェクトに保存 */\n      let obj = this.imageList[this.itemIndex];\n\n      obj.splice(this.index, 1, image);\n      this.imageList.splice(this.itemIndex, 1, obj);\n      this.$store.commit('saveStoreImageList', this.imageList)\n    },\n    saveItemData() {\n      this.itemList.splice(0, 1, this.itemData);\n      // 生成された商品データをstoreに保存する\n      this.$store.commit('saveStoreItemList', this.itemList)\n    },\n    previewImage: function(image) {\n      return !(\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    deleteImage: function() {\n      this.image = {\n        thumnail: \"\",\n        uploadFile: {},\n        name: \"\"\n      };\n\n      event.stopPropagation();\n      let obj = this.imageList[this.itemIndex];\n      obj.splice(this.index, 1, this.image);\n      this.image = obj;\n      /* 画像プレビュー用 */\n       this.$store.commit('saveStoreImageList', this.imageList.splice(this.itemIndex, 1, obj))\n      /* 画像送信用 */\n      this.$emit(\"delImgKey\", this.index, this.imageKey);\n    },\n    async getPresignedUrl(file) {\n      return await lambda\n        .getSignedURL(file)\n        .then(res => {\n          return res.data.uploadUrl;\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    async uploadS3(preSignedUrl, up_file) {\n      try {\n        /* headersでアップロードした画像のContent Typeを設定する */\n        const headers = {\n          \"content-type\": up_file.type\n        };\n        let response = await axios.put(preSignedUrl, up_file, {\n          headers: headers\n        });\n        if (preSignedUrl && preSignedUrl.indexOf(\"?\") != -1) {\n          this.imageKey = preSignedUrl.split(\"?\")[0];\n        }\n        return this.imageKey;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};\n</script>\n<style>\n.c-upload-btn {\n  width: 180px;\n  height: 180px;\n  border: 1px dashed #dedede;\n  margin: 15px 10px 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: #fff;\n}\n\n.c-upload-btn.active {\n  border: solid 1px #e1e1e1;\n}\n\n.c-upload-camera {\n  font-size: 60px;\n  color: #dedede;\n  font-weight: bold;\n}\n\n.upload_warp {\n  height: 20vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.c-upload-img {\n  max-width: 100%;\n  float: left;\n  line-height: 100px;\n  display: table-cell;\n  text-align: center;\n  background-color: #fff;\n  height: 100%;\n}\n\n.c-close_button::before {\n  content: \"\\00D7\";\n}\n\n.c-close_button {\n  position: absolute;\n  width: 100%;\n  height: 30%;\n  left: 0;\n  bottom: 0;\n  font-size: 35px;\n  font-weight: bold;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* sp レスポンス対応 */\n@media only screen and (max-width: 767px) {\n  .c-upload-btn {\n    width: 25vw;\n    height: 25vw;\n  }\n\n  .c-upload-camera {\n    font-size: 40px;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/molecules"}]}