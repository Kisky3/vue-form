{"remainingRequest":"/src/node_modules/babel-loader/lib/index.js!/src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/components/molecules/ImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/src/src/components/molecules/ImageUpload.vue","mtime":1581471028000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/babel-loader/lib/index.js","mtime":1581297303000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1581297308000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ImageUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"c-upload-btn\" @click=\"fileClick\">\n    <span\n      v-show=\"!previewImage(image)\"\n      class=\"iconfont icon-camera c-upload-camera\"\n    ></span>\n    <div v-if=\"previewImage(image)\">\n      <div class=\"c-upload-btn active\">\n        <img :src=\"image.thumnail\" class=\"c-upload-img\" />\n      </div>\n      <a class=\"c-close_button\" @click=\"deleteImage\"></a>\n    </div>\n    <input\n      :id=\"'upload_' + index\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"onFileChange($event)\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from \"vuex\";\nimport lambda from \"../../api/lambda\";\nimport axios from \"axios\";\nexport default {\n  name: \"ImageUpload\",\n  props: [\"index\", \"image\", \"itemIndex\"],\n  data() {\n    return {\n      imageKey: null\n    };\n  },\n  computed: {\n    ...mapGetters({\n      imageList: \"itemInformation/getImageList\",\n      itemList: \"itemInformation/getItemList\"\n    })\n  },\n  methods: {\n    ...mapActions({\n      saveStoreImageList: \"itemInformation/saveImageList\"\n    }),\n    fileClick: function() {\n      $(\"#upload_\" + this.index).click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      this.createImage(files[0]);\n    },\n    createImage(file) {\n      var reader = new FileReader();\n      var vm = this;\n      reader.onload = function(e) {\n        vm.image.thumnail = e.target.result;\n        vm.image.uploadFile = file;\n        vm.image.name = file.name;\n      };\n      vm.previewImage(vm.image);\n      reader.readAsDataURL(file);\n      vm.submitImage(file);\n      vm.saveImageStore(vm.image);\n    },\n    saveImageStore: function(image) {\n      /* 各商品の画像オブジェクトに保存 */\n      let obj = this.imageList[this.itemIndex];\n\n      obj.splice(this.index, 1, image);\n      this.imageList.splice(this.itemIndex, 1, obj);\n      this.saveStoreImageList(this.imageList);\n    },\n    previewImage: function(image) {\n      return !(\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    deleteImage: function() {\n      this.image = {\n        thumnail: \"\",\n        uploadFile: {},\n        name: \"\"\n      };\n\n      event.stopPropagation();\n      let obj = this.imageList[this.itemIndex];\n      obj.splice(this.index, 1, this.image);\n      this.image = obj;\n      /* 画像プレビュー用 */\n      this.saveStoreImageList(this.imageList.splice(this.itemIndex, 1, obj));\n      /* 画像送信用 */\n      this.$emit(\"delImgKey\", this.index, this.imageKey);\n    },\n    async getPresignedUrl(file) {\n      return await lambda\n        .getSignedURL(file)\n        .then(res => {\n          return res.data.url;\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    async uploadS3(preSignedUrl, up_file) {\n      try {\n        /* headersでアップロードした画像のContent Typeを設定する */\n        const headers = {\n          \"content-type\": up_file.type\n        };\n        let response = await axios.put(preSignedUrl, up_file, {\n          headers: headers\n        });\n        // console.log(response);\n        if (preSignedUrl && preSignedUrl.indexOf(\"?\") != -1) {\n          this.imageKey = preSignedUrl.split(\"?\")[0];\n        }\n        return this.imageKey;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async submitImage(upload_file) {\n      let preSignedUrl = await this.getPresignedUrl(upload_file);\n\n      this.imageKey = await this.uploadS3(preSignedUrl, upload_file);\n      this.$emit(\"saveImgKey\", this.index, this.imageKey);\n    }\n  }\n};\n</script>\n<style>\n.c-upload-btn {\n  width: 180px;\n  height: 180px;\n  border: 1px dashed #dedede;\n  margin: 15px 10px 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: #fff;\n}\n\n.c-upload-btn.active {\n  border: solid 1px #e1e1e1;\n}\n\n.c-upload-camera {\n  font-size: 60px;\n  color: #dedede;\n  font-weight: bold;\n}\n\n.upload_warp {\n  height: 20vh;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.c-upload-img {\n  max-width: 100%;\n  float: left;\n  line-height: 100px;\n  display: table-cell;\n  text-align: center;\n  background-color: #fff;\n  cursor: pointer;\n  height: 100%;\n}\n\n.c-close_button::before {\n  content: \"\\00D7\";\n}\n\n.c-close_button {\n  position: absolute;\n  width: 100%;\n  height: 30%;\n  left: 0;\n  bottom: 0;\n  font-size: 35px;\n  font-weight: bold;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6);\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* sp レスポンス対応 */\n@media only screen and (max-width: 767px) {\n  .c-upload-btn {\n    width: 25vw;\n    height: 25vw;\n  }\n\n  .c-upload-camera {\n    font-size: 40px;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/molecules"}]}