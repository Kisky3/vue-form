{"remainingRequest":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js!/Users/kou/Desktop/vue-form/node_modules/eslint-loader/index.js??ref--13-0!/Users/kou/Desktop/vue-form/src/api/info.js","dependencies":[{"path":"/Users/kou/Desktop/vue-form/src/api/info.js","mtime":1580691074019},{"path":"/Users/kou/Desktop/vue-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kou/Desktop/vue-form/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vIGltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0UHJlZmVjdHVyZXNMaXN0OiBmdW5jdGlvbiBnZXRQcmVmZWN0dXJlc0xpc3QoKSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBheGlvcy5nZXQoImh0dHA6Ly9nZW9hcGkuaGVhcnRyYWlscy5jb20vYXBpL2pzb24/bWV0aG9kPWdldFByZWZlY3R1cmVzIikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/Users/kou/Desktop/vue-form/src/api/info.js"],"names":["axios","getPrefecturesList","Promise","resolve","reject","get","then","res","data","catch","error"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,EAAAA,kBADa,gCACQ;AACnB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,KAAK,CACFK,GADH,CACO,6DADP,EAEGC,IAFH,CAEQ,UAAAC,GAAG;AAAA,eAAIJ,OAAO,CAACI,GAAG,CAACC,IAAL,CAAX;AAAA,OAFX,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,eAAIN,MAAM,CAACM,KAAD,CAAV;AAAA,OAHd;AAID,KALM,CAAP;AAMD;AARY,CAAf","sourcesContent":["// import Vue from 'vue'\nimport axios from \"axios\";\n\nexport default {\n  getPrefecturesList() {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"http://geoapi.heartrails.com/api/json?method=getPrefectures\")\n        .then(res => resolve(res.data))\n        .catch(error => reject(error));\n    });\n  }\n};\n"]}]}