{"remainingRequest":"/src/node_modules/babel-loader/lib/index.js!/src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/pages/Photo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/src/src/pages/Photo.vue","mtime":1582104510000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/babel-loader/lib/index.js","mtime":1581297303000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1581297303000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1581297308000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL3NyYy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IGNvbW1vbiBmcm9tICIuLi9qcy9jb21tb24iOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOwppbXBvcnQgbGFtYmRhIGZyb20gIi4uL2FwaS9sYW1iZGEiOwppbXBvcnQgUHJvY2Vzc0JhciBmcm9tICIuLi9jb21wb25lbnRzL21vbGVjdWxlcy9Qcm9jZXNzYmFyIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQaG90byIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVycm9yTXNnOiAiIiwKICAgICAgc2hvd0Vycm9yTXNnOiBmYWxzZSwKICAgICAgc3RlcDogMCwKICAgICAgaW1hZ2VLZXk6IG51bGwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBQcm9jZXNzQmFyOiBQcm9jZXNzQmFyCiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyJpdGVtRGF0YSIsICJpbWFnZURhdGEiLCAiaXRlbUxpc3QiLCAiaW1hZ2VMaXN0Il0pKSwKICBtZXRob2RzOiB7CiAgICBmaWxlQ2xpY2s6IGZ1bmN0aW9uIGZpbGVDbGljaygpIHsKICAgICAgJCgiI3VwbG9hZF9maWxlIikuY2xpY2soKTsKICAgIH0sCiAgICBvbkZpbGVDaGFuZ2U6IGZ1bmN0aW9uIG9uRmlsZUNoYW5nZShlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZmlsZXMgPSBlLnRhcmdldC5maWxlcyB8fCBlLmRhdGFUcmFuc2Zlci5maWxlczsKCiAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwICYmIGZpbGVzLmxlbmd0aCA8PSAzKSB7CiAgICAgICAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoZmlsZSwgaW5kZXgpIHsKICAgICAgICAgIF90aGlzLmNyZWF0ZUltYWdlKGZpbGUsIGluZGV4KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNldEVycm9yTXNnKCJleGNlZWQtaW1hZ2UiKTsKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZUltYWdlOiBmdW5jdGlvbiBjcmVhdGVJbWFnZShmaWxlLCBpbmRleCkgewogICAgICB2YXIgcmVhZGVyLCB2bSwgb2JqOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGNyZWF0ZUltYWdlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICAgIHZtID0gdGhpczsKICAgICAgICAgICAgICBvYmogPSB7fTsKCiAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICBvYmoudGh1bW5haWwgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICBvYmoudXBsb2FkRmlsZSA9IGZpbGU7CiAgICAgICAgICAgICAgICBvYmoubmFtZSA9IGZpbGUubmFtZTsgLy8g44Ki44OD44OX44Ot44O844OJ5oiQ5Yqf44GZ44KM44Gw5L+d5a2Y44GZ44KLCgogICAgICAgICAgICAgICAgaWYgKHZtLmNoZWNrRW1wdHlJbWFnZShvYmopKSB7CiAgICAgICAgICAgICAgICAgIHZtLnNldEVycm9yTXNnKCJuby1pbWFnZSIpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgY29tbW9uLmdldEltZ0tleShmaWxlKS50aGVuKGZ1bmN0aW9uIChpbWFnZUtleSkgewogICAgICAgICAgICAgICAgICAgIHZtLnNhdmVJbWFnZURhdGEob2JqLCBpbmRleCk7CiAgICAgICAgICAgICAgICAgICAgdm0uc2F2ZUltZ0tleShpbmRleCwgaW1hZ2VLZXkpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9LAogICAgc2F2ZUltZ0tleTogZnVuY3Rpb24gc2F2ZUltZ0tleShpbmRleCwgaW1hZ2VLZXkpIHsKICAgICAgdGhpcy5pdGVtRGF0YS5pbWFnZXNbaW5kZXhdID0gaW1hZ2VLZXk7CiAgICAgIHRoaXMuc2F2ZUl0ZW1EYXRhKCk7CiAgICB9LAogICAgc2F2ZUl0ZW1EYXRhOiBmdW5jdGlvbiBzYXZlSXRlbURhdGEoKSB7CiAgICAgIHRoaXMuaXRlbUxpc3Quc3BsaWNlKDAsIDEsIHRoaXMuaXRlbURhdGEpOyAvLyDnlJ/miJDjgZXjgozjgZ/llYblk4Hjg4fjg7zjgr/jgpJzdG9yZeOBq+S/neWtmOOBmeOCiwoKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzYXZlU3RvcmVJdGVtTGlzdCcsIHRoaXMuaXRlbUxpc3QpOwogICAgfSwKICAgIHNhdmVJbWFnZURhdGE6IGZ1bmN0aW9uIHNhdmVJbWFnZURhdGEoaW1hZ2UsIGluZGV4KSB7CiAgICAgIHRoaXMuaW1hZ2VEYXRhLnNwbGljZShpbmRleCwgMSwgaW1hZ2UpOwogICAgICB0aGlzLmltYWdlTGlzdC5zcGxpY2UoMCwgMSwgdGhpcy5pbWFnZURhdGEpOyAvLyDnlJ/miJDjgZXjgozjgZ/nlLvlg4/jg4fjg7zjgr/jgpJzdG9yZeOBq+S/neWtmOOBmeOCiwoKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzYXZlU3RvcmVJbWFnZUxpc3QnLCB0aGlzLmltYWdlTGlzdCk7CiAgICAgIHRoaXMub3Blbkl0ZW1JbmZvcm1hdGlvblBhZ2UoKTsKICAgIH0sCiAgICBjaGVja0VtcHR5SW1hZ2U6IGZ1bmN0aW9uIGNoZWNrRW1wdHlJbWFnZShpbWFnZSkgewogICAgICByZXR1cm4gaW1hZ2UudGh1bW5haWwgPT09ICIiICYmIE9iamVjdC5rZXlzKGltYWdlLnVwbG9hZEZpbGUpLmxlbmd0aCA9PT0gMCAmJiBpbWFnZS5uYW1lID09PSAiIjsKICAgIH0sCiAgICBvcGVuSXRlbUluZm9ybWF0aW9uUGFnZTogZnVuY3Rpb24gb3Blbkl0ZW1JbmZvcm1hdGlvblBhZ2UoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCJpdGVtX2luZm9ybWF0aW9uIiwgZnVuY3Rpb24gKCkge30sIGZ1bmN0aW9uICgpIHt9KTsKICAgIH0sCiAgICBzZXRFcnJvck1zZzogZnVuY3Rpb24gc2V0RXJyb3JNc2coZXJyVHlwZSkgewogICAgICBzd2l0Y2ggKGVyclR5cGUpIHsKICAgICAgICBjYXNlICJuby1pbWFnZSI6CiAgICAgICAgICB0aGlzLmVycm9yTXNnID0gIuOCr+ODquODg+OCr+OBl+OBpuWGmeecn+OCkueZu+mMsuOBl+OBpuOBj+OBoOOBleOBhCI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiZXhjZWVkLWltYWdlIjoKICAgICAgICAgIHRoaXMuZXJyb3JNc2cgPSAi55S75YOPM+aemuOBvuOBp+eZu+mMsuOBl+OBpuOBj+OBoOOBleOBhCI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAidXBsb2FkLWZhaWwiOgogICAgICAgICAgdGhpcy5lcnJvck1zZyA9ICLnlLvlg4/jgqLjg4Pjg5fjg63jg7zjg4nlpLHmlZfjgZfjgb7jgZfjgZ/jgIHjgoLjgYbkuIDlm57oqabjgZfjgabjgY/jgaDjgZXjgYQiOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIHRoaXMuc2hvd0Vycm9yTXNnID0gdHJ1ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Photo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <process-bar :step=\"step\" />\n    <div class=\"c-page-container\">\n      <div class=\"c-page-title\">\n        <p>商品写真登録</p>\n      </div>\n      <div class=\"c-page-row center\" @click=\"fileClick()\">\n        <label class=\"c-photo-label\"> 60秒で簡単査定!</label>\n        <div class=\"c-photo-wrap\">\n          <img\n            class=\"c-photo-mark\"\n            src=\"../assets/img/image-upload.png\"\n            alt=\"\"\n          />\n          <div class=\"c-photo-btn\">\n            <span class=\"iconfont icon-camera\"></span>\n          </div>\n          <div class=\"c-photo-add-btn\">\n            + 商品を追加する\n          </div>\n        </div>\n        <span class=\"error-msg\" v-show=\"showErrorMsg\">{{ errorMsg }}</span>\n        <input\n          id=\"upload_file\"\n          multiple=\"multiple\"\n          type=\"file\"\n          accept=\"image/*\"\n          @change=\"onFileChange($event)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport common from \"../js/common\";\nimport { mapState } from \"vuex\";\nimport lambda from \"../api/lambda\";\nimport ProcessBar from \"../components/molecules/Processbar\";\n\nexport default {\n  name: \"Photo\",\n  data() {\n    return {\n      errorMsg: \"\",\n      showErrorMsg: false,\n      step: 0,\n      imageKey: null\n    };\n  },\n  components: {\n    ProcessBar\n  },\n  computed: {\n    ...mapState([\"itemData\",\"imageData\",\"itemList\",\"imageList\"]),\n  },\n  methods: {\n    fileClick: function() {\n      $(\"#upload_file\").click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (files.length > 0 && files.length <= 3) {\n        files.forEach((file, index) => {\n          this.createImage(file, index);\n        });\n      } else {\n        this.setErrorMsg(\"exceed-image\");\n      }\n    },\n    async createImage(file, index) {\n      var reader = new FileReader();\n      var vm = this;\n      var obj = {};\n      reader.onload = function(e) {\n        obj.thumnail = e.target.result;\n        obj.uploadFile = file;\n        obj.name = file.name;\n\n        // アップロード成功すれば保存する\n        if (vm.checkEmptyImage(obj)) {\n          vm.setErrorMsg(\"no-image\");\n        } else {\n          common.getImgKey(file).then(imageKey => {\n            vm.saveImageData(obj, index);\n            vm.saveImgKey(index, imageKey);\n          });\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n    saveImgKey(index, imageKey) {\n      this.itemData.images[index] = imageKey;\n      this.saveItemData();\n    },\n    saveItemData() {\n      this.itemList.splice(0, 1, this.itemData);\n      // 生成された商品データをstoreに保存する\n      this.$store.commit('saveStoreItemList', this.itemList)\n    },\n    saveImageData(image, index) {\n      this.imageData.splice(index, 1, image);\n      this.imageList.splice(0, 1, this.imageData);\n      // 生成された画像データをstoreに保存する\n      this.$store.commit('saveStoreImageList', this.imageList)\n      this.openItemInformationPage();\n    },\n    checkEmptyImage: function(image) {\n      return (\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    openItemInformationPage() {\n      this.$router.push(\n        \"item_information\",\n        () => {},\n        () => {}\n      );\n    },\n    setErrorMsg: function(errType) {\n      switch (errType) {\n        case \"no-image\":\n          this.errorMsg = \"クリックして写真を登録してください\";\n          break;\n        case \"exceed-image\":\n          this.errorMsg = \"画像3枚まで登録してください\";\n          break;\n        case \"upload-fail\":\n          this.errorMsg =\n            \"画像アップロード失敗しました、もう一回試してください\";\n          break;\n      }\n      this.showErrorMsg = true;\n    }\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/pages"}]}