{"remainingRequest":"/src/node_modules/babel-loader/lib/index.js!/src/node_modules/cache-loader/dist/cjs.js??ref--0-0!/src/node_modules/vue-loader/lib/index.js??vue-loader-options!/src/src/pages/Photo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/src/src/pages/Photo.vue","mtime":1582822556000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1583055144000},{"path":"/src/node_modules/babel-loader/lib/index.js","mtime":1583055144000},{"path":"/src/node_modules/cache-loader/dist/cjs.js","mtime":1583055144000},{"path":"/src/node_modules/vue-loader/lib/index.js","mtime":1583055150000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Photo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <process-bar :step=\"step\" />\n    <div class=\"c-page-container\">\n      <div class=\"c-page-title\">\n        <p>商品写真登録</p>\n      </div>\n      <div class=\"c-page-row center\" @click=\"fileClick()\">\n        <label class=\"c-photo-label\"> 60秒で簡単査定!</label>\n        <div class=\"c-photo-wrap\">\n          <!--一旦コメントアウト\n          <img\n            class=\"c-photo-mark\"\n            src=\"../assets/img/image-upload.png\"\n            alt=\"\"\n          />\n          -->\n          <div class=\"c-photo-btn\">\n            <span class=\"iconfont icon-camera\"></span>\n          </div>\n          <div class=\"c-photo-add-btn\">\n            + 商品を追加する\n          </div>\n        </div>\n        <span class=\"error-msg\" v-show=\"showErrorMsg\">{{ errorMsg }}</span>\n        <input\n          id=\"upload_file\"\n          multiple=\"multiple\"\n          type=\"file\"\n          accept=\"image/*\"\n          @change=\"onFileChange($event)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from \"vuex\";\nimport ProcessBar from \"../components/molecules/Processbar\";\nimport lambda from \"../api/lambda\";\nimport axios from \"axios\";\nexport default {\n  name: \"Photo\",\n  data() {\n    return {\n      errorMsg: \"\",\n      showErrorMsg: false,\n      step: 0,\n      imageKey: null,\n      initialItemData: {\n        title: null,\n        images: {},\n        cat_lvl0: null,\n        cat_lvl1: null,\n        cat_lvl2: null,\n        item_comment: null\n      }\n    };\n  },\n  components: {\n    ProcessBar\n  },\n  computed: {\n    ...mapGetters({\n      imageData: \"itemInformation/getImageData\",\n      imageList: \"itemInformation/getImageList\",\n      itemList: \"itemInformation/getItemList\"\n    }),\n    itemData() {\n      return this.initialItemData;\n    }\n  },\n  methods: {\n    ...mapActions({\n      saveStoreImageData: \"itemInformation/saveImageData\",\n      saveStoreItemData: \"itemInformation/saveItemList\",\n      saveStoreImageList: \"itemInformation/saveImageList\"\n    }),\n    saveImageData(image, index) {\n      /* 各商品の画像オブジェクトに保存 */\n      this.imageData.splice(index, 1, image);\n      this.saveStoreImageData(this.imageData);\n\n      /* 全体の商品イメージリストに保存する */\n      this.imageList.splice(0, 1, this.imageData);\n      this.saveStoreImageList(this.imageList);\n      /* 商品登録ページに遷移 */\n      this.openItemInformationPage();\n    },\n    async submitImage(upload_file, index) {\n      let preSignedUrl = await this.getPresignedUrl(upload_file);\n      this.imageKey = await this.uploadS3(preSignedUrl, upload_file);\n      this.saveImgKey(index, this.imageKey);\n    },\n    async uploadS3(preSignedUrl, up_file) {\n      try {\n        /* headersでアップロードした画像のContent Typeを設定する */\n        const headers = {\n          \"content-type\": up_file.type\n        };\n        let response = await axios.put(preSignedUrl, up_file, {\n          headers: headers\n        });\n        if (preSignedUrl && preSignedUrl.indexOf(\"?\") != -1) {\n          this.imageKey = preSignedUrl.split(\"?\")[0];\n        }\n        return this.imageKey;\n      } catch (error) {\n        this.setErrorMsg(\"upload-fail\");\n        console.log(error);\n      }\n    },\n    saveImgKey(index, imageKey) {\n      this.itemData.images[index] = imageKey;\n      this.saveItemData();\n    },\n    saveItemData() {\n      this.itemList.splice(0, 1, this.itemData);\n      // 生成された商品データをstoreに保存する\n      this.saveStoreItemData(this.itemList);\n    },\n    async getPresignedUrl(file) {\n      return await lambda\n        .getSignedURL(file)\n        .then(res => {\n          return res.data.url;\n        })\n        .catch(err => {\n          this.setErrorMsg(\"upload-fail\");\n          console.log(err);\n        });\n    },\n    fileClick: function() {\n      $(\"#upload_file\").click();\n    },\n    onFileChange: function(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (files.length > 0 && files.length <= 3) {\n        files.forEach((file, index) => {\n          this.createImage(file, index);\n        });\n      } else {\n        this.setErrorMsg(\"exceed-image\");\n      }\n    },\n    async createImage(file, index) {\n      var reader = new FileReader();\n      var vm = this;\n      var obj = {};\n      reader.onload = function(e) {\n        obj.thumnail = e.target.result;\n        obj.uploadFile = file;\n        obj.name = file.name;\n\n        // アップロード成功すれば保存する\n        if (vm.checkEmptyImage(obj)) {\n          vm.setErrorMsg(\"no-image\");\n        } else {\n          vm.submitImage(file, index);\n          vm.saveImageData(obj, index);\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n    checkEmptyImage: function(image) {\n      return (\n        image.thumnail === \"\" &&\n        Object.keys(image.uploadFile).length === 0 &&\n        image.name === \"\"\n      );\n    },\n    openItemInformationPage() {\n      this.$router.push(\n        \"item_information\",\n        () => {},\n        () => {}\n      );\n    },\n    setErrorMsg: function(errType) {\n      switch (errType) {\n        case \"no-image\":\n          this.errorMsg = \"クリックして写真を登録してください\";\n          break;\n        case \"exceed-image\":\n          this.errorMsg = \"画像3枚まで登録してください\";\n          break;\n        case \"upload-fail\":\n          this.errorMsg =\n            \"画像アップロード失敗しました、もう一回試してください\";\n          break;\n      }\n      this.showErrorMsg = true;\n    }\n  }\n};\n</script>\n<style></style>\n"],"sourceRoot":"src/pages"}]}